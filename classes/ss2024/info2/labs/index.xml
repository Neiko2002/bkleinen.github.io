<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>B7 Informatik 2 Summer 2024 - Labs and Exercises on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/</link><description>Recent content in B7 Informatik 2 Summer 2024 - Labs and Exercises on Prof. Dr. Barne Kleinen</description><generator>Hugo 0.125.2</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/classes/ss2024/info2/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Lab 01: Application Design</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-01/</guid><description>CRC Cards
Learning Goals After this lab you should be able to agree with each of the following statements.
I can use CRC Cards to design an application:
Using the underline methods, I can identify candidates for classes, methods and fields. By working through scenarios I can identify cases where a class needs to be split up. By working through scenarios I can identify cases where classes need to be merged.</description></item><item><title>Lab 02: Programming &amp; Tools, Review of CRC Model</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-02/</guid><description>Learning Goals After this lab you should be able to agree with each of the following statements
I am familiar with programming in IntelliJ:
I can create a new Java project in IntelliJ I remember most of the concepts from A1 Ex1 I can run my new Java project in IntelliJ I am ready to use Git:
I can clone an online repository I can create an empty repository on GitLab or GitHub I can update my local repository&amp;rsquo;s remotes I can add changes to be committed I can commit changes I can push changes I have reviewed the Domain Model</description></item><item><title>Lab 03: Implementing CRC Cards</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/lab-03/</guid><description>Learning Goals After this lab you should be able to agree with each of the following statements. This looks like a lot, but it is all repetition from what you learned in Info1. Ideally you agree with each statement even before starting the lab.
I remember programming concepts concerning classes and objects:
I know the difference between classes and objects. I can instantiate an object. I remember programming concepts concerning fields and variable types:</description></item><item><title>A Note on the Notation of CRC Cards</title><link>https://bkleinen.github.io/classes/ss2024/info2/labs/note-on-crc-cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2024/info2/labs/note-on-crc-cards/</guid><description>We&amp;rsquo;ve discussed the relationship between the Classes &amp;ldquo;Student&amp;rdquo; and &amp;ldquo;Course&amp;rdquo; (aka Module, Class) in last week&amp;rsquo;s lab and lecture.
I&amp;rsquo;ve pointed out that if you change the syntax of the representation, e.g. because you use some kind of diagramming tool, you have to be careful not to loose any information.
if you consider these two CRC cards below, a CRC card contains information about these three things1:
Class Name Responsibilities Collaborators Dependencies (see below) CRC-Cards Consider these two CRC-Cards: Student Stores Information about Student (e.</description></item></channel></rss>